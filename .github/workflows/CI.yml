name: CI

on:
  push:
    branches:
      - "*"
    tags:
      - '*'
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [x86_64, x86, aarch64, armv7, s390x, ppc64le]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Fix Release Version
        run: 'pip install -U build wheel semver && ./release.py finalize'
        if: "github.event_name == 'push' && github.repository == 'rhelmot/aiotarfile' && startsWith(github.ref, 'refs/tags/v') && success()"
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist --find-interpreter
          sccache: 'true'
          manylinux: auto
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  windows:
    runs-on: windows-latest
    strategy:
      matrix:
        target: [x64, x86]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          architecture: ${{ matrix.target }}
      - name: Fix Release Version
        run: 'pip install -U build wheel semver && python ./release.py finalize'
        if: "github.event_name == 'push' && github.repository == 'rhelmot/aiotarfile' && startsWith(github.ref, 'refs/tags/v') && success()"
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist --find-interpreter
          sccache: 'true'
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  macos:
    runs-on: macos-latest
    strategy:
      matrix:
        target: [x86_64, aarch64]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Fix Release Version
        run: 'pip install -U build wheel semver && ./release.py finalize'
        if: "github.event_name == 'push' && github.repository == 'rhelmot/aiotarfile' && startsWith(github.ref, 'refs/tags/v') && success()"
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist --find-interpreter
          sccache: 'true'
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Fix Release Version
        run: 'pip install -U build wheel semver && ./release.py finalize'
        if: "github.event_name == 'push' && github.repository == 'rhelmot/aiotarfile' && startsWith(github.ref, 'refs/tags/v') && success()"
      - name: Build sdist
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: --out dist
      - name: Upload sdist
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  tests:
    runs-on: ubuntu-latest
    needs: [linux]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - uses: actions/download-artifact@v3
        with:
          name: wheels
          pattern: '*x86_64*'
      - name: Install
        run: 'pip install --pre --find-links . aiotarfile pytest'
      - name: Test
        run: 'pytest -v tests'

  release:
    name: Release
    runs-on: ubuntu-latest
    if: "startsWith(github.ref, 'refs/tags/v')"
    needs: [linux, windows, macos, sdist, tests]
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: wheels
      - name: Publish to PyPI
        uses: PyO3/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        with:
          command: upload
          args: --non-interactive --skip-existing *
